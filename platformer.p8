pico-8 cartridge // http://www.pico-8.com
version 15
__lua__

--
-- game loop.
--

function _init()
 g = game()
end

function _update60()
 game.update(g)
end

function _draw()
 cls()
 map(0, 0, 0, 0, 128, 128)
 player.draw(g.player)
 print(g.player.dx)
 print(stat(0))
end
-->8

--
-- entities.
--

--
-- player.
--

player = {}

setmetatable(player, {
 __call = function(_, x, y)
  return {
   -- constants.
   sp = 1,
   grav = 0.15,
   max_dx = 1,
   max_dy = 2,
   w = 8,
   h = 8,
   jump_vel = -1.5,

   -- try tweaking these.
   acc = 0.05,
   dcc = 0.8,

   -- state.
   -- x,y is center of sprite.
   -- x,y can be fractional.
   x = x or 0,
   y = y or 0,
   grounded = false,
   dx = 0,
   dy = 0,

   jump_ticks = 0,
   max_jump_ticks = 15,
  }
 end,
})

-- player -> void
function player.update(p)
 local l = btn(0)
 local r = btn(1) and not l

 -- compute dx.
 if l then
  p.dx -= p.acc
 elseif r then
  p.dx += p.acc
 else
  p.dx *= p.dcc
 end
 p.dx = mid(-p.max_dx, p.dx, p.max_dx)

 -- move x.
 p.x += p.dx

 -- handle jump button.
 if btn(5) then -- x
  p.jump_ticks += 1
 else
  p.jump_ticks = 0
 end

 -- set dy to jump velocity if
 -- player is grounded or jump
 -- is held down.
 if
  p.grounded and p.jump_ticks == 1 or
  1 < p.jump_ticks and p.jump_ticks <= p.max_jump_ticks
 then
  p.dy = p.jump_vel
 end

 -- move y.
 p.dy += p.grav
 p.dy = mid(-p.max_dy, p.dy, p.max_dy)
 p.y += p.dy

 -- handle floor collision.
 p.grounded = player.collide_floor(p)
end

-- player -> bool
-- this function mutates player.
function player.collide_floor(p)
 if (p.dy < 0) return false

 local landed = false
 local t = p.w / 3

 -- check a t-shaped area below
 -- the player.
 for i=-t,t,t do
  local below = (p.y + p.h/2) / 8

  -- mget calls flr() for us,
  -- no need to call flr().
  local tile = mget(
   (p.x+i) / 8,
   below
  )

  if fget(tile, 0) then
   -- place player on top of tile.
   p.y = flr(below)*8 - p.h/2
   p.dy = 0
   landed = true
  end
 end

 return landed
end

-- player -> void
function player.draw(p)
 spr(
  p.sp,
  flr(p.x - p.w/2),
  flr(p.y - p.h/2)
 )
end

--
-- game.
--

game = {}

setmetatable(game, {
 __call = function()
  return {
   player = player(12,10),
  }
 end,
})

-- game -> void
function game.update(g)
 player.update(g.player)
end

-- todo: add jumping
-- allow jumps:
--  on ground
--  x recently on ground
--  x pressed btn b4 landing
__gfx__
00000000000000001111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001999999100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000001911119100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000001911119100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000880001911119100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000880001911119100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000880001999999100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000880001111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000002020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200020202000202000202020202000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000002000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000020002000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
